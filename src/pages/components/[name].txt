import type { NextPage } from 'next'
import BlockShowcase from '../../feature/showcase/components/BlockShowcase'
import fs from 'fs'
import path from 'path'

export const getServerSideProps = async (context:any) => {
  const component = context.query['name']
  let doc = {};
  try {
    const files = fs.readdirSync(path.join('doc',component))
    doc = files.map(filename => {
      // Read File From Server Side and Return to Array
      // How to know their are many file in it ?
      const file_content = fs.readFileSync(path.join('doc',component, filename), 'utf-8')
        return {
          file_content: file_content,
          file_name: filename
        }
    })
  } catch(error) {
    const files = fs.readdirSync(path.join('doc','button'))
    doc = files.map(filename => {
      // Read File From Server Side and Return to Array
      // How to know their are many file in it ?
      const file_content = fs.readFileSync(path.join('doc','button', filename), 'utf-8')
        return {
          file_content: file_content,
          file_name: filename
        }
    })
  }
    
  return {
    props: {
      doc
    }
  }
}

interface DocProps {
  doc: {
    file_content: string;
    file_name: string;
  }[];
}


const PageShowcase: NextPage<DocProps> = ({doc}) => {
  return (
    <>
      {doc ? <BlockShowcase doc={doc} /> : null }
    </>
  )
}

export default PageShowcase